name: GraalVM smoke tests

on:
  pull_request: {}
permissions: read-all
jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2022]
        transport: [native, nio]
        exclude:
          # excludes native on Windows (there's none)
          - os: windows-2022
            transport: native
          # macOS - https://github.com/netty/netty/issues/9689
          - os: macos-11
            transport: native

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          path: reactor-netty
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          repository: netty-contrib/socks-proxy
          path: socks-proxy
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          repository: netty-contrib/codec-multipart
          path: codec-multipart
      - name: Download GraalVM 17
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            download_url="https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-17.0.9/graalvm-community-jdk-17.0.9_linux-x64_bin.tar.gz"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            download_url="https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-17.0.9/graalvm-community-jdk-17.0.9_macos-x64_bin.tar.gz"
          else
            download_url="https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-17.0.9/graalvm-community-jdk-17.0.9_windows-x64_bin.zip"
          fi
          curl -L $download_url --output $RUNNER_TEMP/java_package.tar.gz
        shell: bash
      - name: Set up GraalVM 17
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
        with:
          distribution: 'jdkfile'
          jdkFile: ${{ runner.temp }}/java_package.tar.gz
          java-version: '17'
      - name: Build socks-proxy
        run: ./mvnw install -DskipTests=true "-Dnetty.version=5.0.0.Alpha6-SNAPSHOT"
        working-directory: ./socks-proxy
      - name: Build codec-multipart
        run: ./mvnw install -DskipTests=true "-Dnetty.version=5.0.0.Alpha6-SNAPSHOT"
        working-directory: ./codec-multipart
      - name: Build with Gradle
        run: ./gradlew :reactor-netty5-graalvm-smoke-tests:nativeTest --no-daemon -PforceTransport=${{ matrix.transport }}
        working-directory: ./reactor-netty