name: _deploy doc job

##
# Reusable job used to deploy antota docs into the site.
##

on:
  workflow_call:
    inputs:
      component:
        required: true
        type: string
      full-version: # if left empty, it means we'll build the reference doc which include latest major/snapshot versions
        required: false
        type: string
        default: ''
      version-type: # if left empty, it means we'll build the reference doc which include latest major/snapshot versions
        required: false
        type: string
        default: ''

jobs:
  deploy-doc:
    name: deploy-doc
    runs-on: ubuntu-20.04
    env:
      FULL_VERSION: ${{ inputs.full-version }}
      VERSION_TYPE: ${{ inputs.version-type }}
      COMPONENT: ${{ inputs.component }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: Download doc
        uses: actions/download-artifact@v4
        with:
          name: doc
          path: tmp
      - name: Download javadoc
        if: inputs.full-version != '' && inputs.version-type != ''
        uses: actions/download-artifact@v4
        with:
            name: javadoc
            path: tmp
      - name: Prepare doc for a specific version
        if: inputs.full-version != '' && inputs.version-type != ''
        run: |-
            mkdir gh-pages-docs
            > gh-pages-docs/.nojekyll
            mkdir -p gh-pages-docs/$COMPONENT/$FULL_VERSION/javadoc-api
            mkdir -p gh-pages-docs/$COMPONENT/$FULL_VERSION/reference/html
            mkdir -p gh-pages-docs/$COMPONENT/$FULL_VERSION/reference/pdf
            cp -r tmp/javadoc/* gh-pages-docs/$COMPONENT/$FULL_VERSION/javadoc-api/
            cp -r tmp/site/* gh-pages-docs/$COMPONENT/$FULL_VERSION/reference/html/
            if [ "$VERSION_TYPE" != "SNAPSHOT" ]; then
                pdf=$(find tmp/assembler -name "*.pdf" 2>/dev/null)
                [ -n "$pdf" ] && cp $pdf gh-pages-docs/$COMPONENT/$FULL_VERSION/reference/pdf/
            fi
      - name: Prepare reference doc
        if: inputs.full-version == '' && inputs.version-type == ''
        run: |-
            mkdir gh-pages-docs
            > gh-pages-docs/.nojekyll
            mkdir -p gh-pages-docs/$COMPONENT/reference
            cp -r tmp/site/* gh-pages-docs/$COMPONENT/reference/
      - uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Auto ln
        if: inputs.full-version != '' && inputs.version-type != ''
        run: |
            wget https://github.com/spring-io/autoln/releases/download/latest/autoln-1.0.0-SNAPSHOT.zip
            unzip autoln-1.0.0-SNAPSHOT.zip
            ./autoln-1.0.0-SNAPSHOT/bin/autoln create --project-dir gh-pages-docs/$COMPONENT
            ls -ltr gh-pages-docs/$COMPONENT
      - name: Publish docs
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.DOCS_PAGES_TOKEN }}
          repository-name: pderop/test-antora-pages
          folder: gh-pages-docs
          target-folder: docs
          clean: false
          force: true

  cleanup:
    runs-on: ubuntu-20.04
    needs: [ deploy-doc ]
    if: always()
    steps:
      - name: cleanup javadoc artifact
        uses: geekyeggo/delete-artifact@v4
        with:
          name: doc
      - name: cleanup javadoc artifact
        if: always() && inputs.full-version != '' && inputs.version-type != ''
        uses: geekyeggo/delete-artifact@v4
        with:
          name: javadoc




