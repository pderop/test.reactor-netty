name: publish
on:
  push:
    branches: # For branches, better to list them explicitly than regexp include
      - main
      - netty5
permissions: read-all
jobs:
  # General job notes: we DON'T want to cancel any previous runs, especially in the case of a "back to snapshots" build right after a release push
  # We specify the ubuntu version to minimize the chances we have to deal with a migration during a release
  reactor-netty-core:
    # Notes on reactor-netty-core: this job has no access to secrets, only github token. As a result, all non-core actions are centralized here
    name: reactor-netty-core
    runs-on: ubuntu-20.04
    outputs:
      versionType: ${{ steps.version.outputs.versionType }}
      fullVersion: ${{ steps.version.outputs.fullVersion }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: setup java
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: interpret version
        id: version
        #we only run the qualifyVersionGha task so that no other console printing can hijack this step's output
        #output: versionType, fullVersion
        #fails if versionType is BAD, which interrupts the workflow
        run: ./gradlew qualifyVersionGha
      - name: run reactor-netty-core checks
        id: reactor-netty-core-checks
        run: echo "./gradlew reactor-netty-core:check"
  reactor-netty-http:
    # Notes on reactor-netty-http: this job has no access to secrets, only github token. As a result, all non-core actions are centralized here
    name: reactor-netty-http
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: setup java
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: run reactor-netty-http checks
        id: reactor-netty-http-checks
        run: echo "./gradlew reactor-netty-http:check"
  reactor-netty-http-brave:
    # Notes on reactor-netty-http-brave: this job has no access to secrets, only github token. As a result, all non-core actions are centralized here
    name: reactor-netty-http-brave
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: setup java
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: run reactor-netty-http-brave checks
        id: reactor-netty-http-brave-checks
        run: echo "./gradlew reactor-netty-http-brave:check"
  reactor-netty-incubator-quic:
    # Notes on reactor-netty-incubator-quic: this job has no access to secrets, only github token. As a result, all non-core actions are centralized here
    name: reactor-netty-incubator-quic
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: setup java
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: run reactor-netty-incubator-quic checks
        id: reactor-netty-incubator-quic-checks
        run: echo "./gradlew reactor-netty-incubator-quic:check"

  #deploy the antora doc to gh-pages
  deployAntora:
      name: deployAntora
      runs-on: ubuntu-20.04
      needs: [ reactor-netty-core ]
      #environment: snapshots
      env:
          VERSION_TYPE: ${{ needs.reactor-netty-core.outputs.versionType }}
          FULL_VERSION: ${{ needs.reactor-netty-core.outputs.fullVersion }}
      steps:
          - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
          - name: Set up Ruby
            uses: ruby/setup-ruby@v1
            with:
                ruby-version: 2.7.8
          - name: Install asciidoctor-pdf
            run: gem install asciidoctor-pdf
          - uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
            with:
                distribution: 'temurin'
                java-version: '8'
          - name: Build Reactor Netty javadoc
            run: ./gradlew javadoc
          - uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
            with:
                distribution: 'temurin'
                java-version: '17'
          - name: Prepare gh-pages
            run: |-
                ./gradlew docs:antora -Pantora.playbook=antora-playbook.yml
                mkdir -p gh-pages-docs/netty/$FULL_VERSION/javadoc-api
                mkdir -p gh-pages-docs/netty/$FULL_VERSION/reference/html
                cp -r ${{ github.workspace }}/reactor-netty/build/docs/javadoc/* gh-pages-docs/netty/$FULL_VERSION/javadoc-api/
                cp -r ${{ github.workspace }}/docs/build/site/* gh-pages-docs/netty/$FULL_VERSION/reference
                [ "$VERSION_TYPE" == "SNAPSHOT" ] && mv ${{ github.workspace }}/docs/build/assembler/reactor-netty/*/reactor-netty-reference-guide.pdf gh-pages-docs/netty/$FULL_VERSION/reference/
                cd gh-pages-docs/netty
                [ "$VERSION_TYPE" == "SNAPSHOT" ] && ln -sf $FULL_VERSION current-SNAPSHOT || ln -sf $FULL_VERSION current
                cd ${{ github.workspace }}
                ./gradlew docs:clean docs:antora -Pantora.playbook=antora-playbook-reference.yml
                mkdir -p gh-pages-docs/netty/reference/
                cp -r docs/build/site/* gh-pages-docs/netty/reference/
          - name: Publish docs to gh-pages
            uses: JamesIves/github-pages-deploy-action@v4
            with:
                token: ${{ secrets.DOCS_PAGES_TOKEN }}
                repository-name: pderop/test-antora-pages
                folder: gh-pages-docs
                target-folder: docs
                clean: false
                force: true

  #deploy the snapshot artifacts to Artifactory
  deploySnapshot:
    name: deploySnapshot
    runs-on: ubuntu-20.04
    needs: [ reactor-netty-core, reactor-netty-http, reactor-netty-http-brave, reactor-netty-incubator-quic, deployAntora ]
    if: needs.reactor-netty-core.outputs.versionType == 'SNAPSHOT'
    environment: snapshots
    steps:
      - name: deploy
#        env:
#            ORG_GRADLE_PROJECT_artifactory_publish_username: ${{secrets.ARTIFACTORY_SNAPSHOT_USERNAME}}
#            ORG_GRADLE_PROJECT_artifactory_publish_password: ${{secrets.ARTIFACTORY_PASSWORD}}
        run: |-
            echo "deploy snapshot artifacts to Artifactory ..."

  #sign the milestone artifacts and deploy them to Artifactory
  deployMilestone:
    name: deployMilestone
    runs-on: ubuntu-20.04
    needs: [ reactor-netty-core, reactor-netty-http, reactor-netty-http-brave, reactor-netty-incubator-quic, deployAntora ]
    if: needs.reactor-netty-core.outputs.versionType == 'MILESTONE'
    environment: releases
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: deploy
        env:
          ORG_GRADLE_PROJECT_artifactory_publish_username: ${{secrets.ARTIFACTORY_USERNAME}}
          ORG_GRADLE_PROJECT_artifactory_publish_password: ${{secrets.ARTIFACTORY_PASSWORD}}
          ORG_GRADLE_PROJECT_signingKey: ${{secrets.SIGNING_KEY}}
          ORG_GRADLE_PROJECT_signingPassword: ${{secrets.SIGNING_PASSPHRASE}}
        run: echo "deploy milestone artifacts to artifactory"

  #sign the release artifacts and deploy them to Artifactory
  deployRelease:
    name: deployRelease
    runs-on: ubuntu-20.04
    needs: [ reactor-netty-core, reactor-netty-http, reactor-netty-http-brave, reactor-netty-incubator-quic, deployAntora ]
    if: needs.reactor-netty-core.outputs.versionType == 'RELEASE'
    environment: releases
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: deploy
        env:
          ORG_GRADLE_PROJECT_artifactory_publish_username: ${{secrets.ARTIFACTORY_USERNAME}}
          ORG_GRADLE_PROJECT_artifactory_publish_password: ${{secrets.ARTIFACTORY_PASSWORD}}
          ORG_GRADLE_PROJECT_signingKey: ${{secrets.SIGNING_KEY}}
          ORG_GRADLE_PROJECT_signingPassword: ${{secrets.SIGNING_PASSPHRASE}}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{secrets.SONATYPE_USERNAME}}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{secrets.SONATYPE_PASSWORD}}
        run: echo "Release artifacts and deploy them to Artifactory"

  tagMilestone:
    name: Tag milestone
    needs: [ reactor-netty-core, deployMilestone ]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: tag
        run: |
          git config --local user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --local user.email "${{ env.CI_COMMIT_EMAIL }}"
#          git tag -m "Release milestone ${{ needs.reactor-netty-core.outputs.fullVersion }}" v${{ needs.reactor-netty-core.outputs.fullVersion }} ${{ github.sha }}
#          git push --tags

  tagRelease:
    name: Tag release
    needs: [ reactor-netty-core, deployRelease ]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: tag
        run: |
          git config --local user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --local user.email "${{ env.CI_COMMIT_EMAIL }}"
#          git tag -m "Release version ${{ needs.reactor-netty-core.outputs.fullVersion }}" v${{ needs.reactor-netty-core.outputs.fullVersion }} ${{ github.sha }}
#          git push --tags

# For Gradle configuration of signing, see https://docs.gradle.org/current/userguide/signing_plugin.html#sec:in-memory-keys
# publishMavenJavaPublicationToSonatypeRepository only sends to a staging repository